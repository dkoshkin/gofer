name: Release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    tags:
      - '*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  unit-test:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Build the builder container
        run: make builder
      - name: Run unit tests
        run: make test
        env:
          DATASTORE_PROJECT_ID: ${{ secrets.DATASTORE_PROJECT_ID }}
          DATASTORE_CREDENTIALS_BASE64: ${{ secrets.DATASTORE_CREDENTIALS_BASE64 }}

  release:
    runs-on: ubuntu-latest
    needs: unit-test
    env:
      IMAGE_CLI: dkoshkin/gofer
      IMAGE_NOTIFIER: dkoshkin/gofer-notifier
      IMAGE_NOTIFIER_GCR: gcr.io/gofer-278221/gofer-notifier

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Get VERSION
        id: version
        run: echo "::set-output name=version::$(git describe --tags --always)"
      - name: Get BUILD_DATE
        id: date
        run: echo "::set-output name=date::$(date -u)"
      - name: Docker Login to GCR
        run: echo ${{ secrets.GCR_SA_JSON }} | docker login -u _json_key --password-stdin ${{ env.IMAGE_NOTIFIER_GCR }}
      - name: Build the builder container
        run: make builder
      - name: Build and push CLI image
        uses: docker/build-push-action@v1
        with:
          dockerfile: build/docker/Dockerfile.cli
          build_args: VERSION=${{steps.version.outputs.version}},BUILD_DATE=${{steps.date.outputs.date}}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ env.IMAGE_CLI }}
          tags: stable,latest
          tag_with_ref: true
      - name: Build and push notifier image
        uses: docker/build-push-action@v1
        with:
          dockerfile: build/docker/Dockerfile.notifier
          build_args: VERSION=${{steps.version.outputs.version}},BUILD_DATE=${{steps.date.outputs.date}}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ env.IMAGE_NOTIFIER }}
          tags: stable,latest
          tag_with_ref: true
      - name: Dockre Push notifier image to GCR
        run: make tag-and-push-gcr